openapi: '3.0.3'
info:
  title: CP NewsPro Management API
  version: "0.1"
servers:
  - url: https://cp-dev.newshub.pro/mapi
    description: Staging server.
paths:
  /users/{id}:
    parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#components/schemas/ObjectId'
    get:
      summary: Get a user by ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
    patch:
      summary: Update user.
      parameters:
        - $ref: '#components/parameters/IfMatch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/User'
      responses:
        '200':
          description: User updated.
        '412':
          description: If-Match header value does not match etag in database.
    delete:
      summary: Delete user.
      parameters:
        - in: header
          name: If-Match
          schema:
            type: string
          required: true
          description: Etag of the resource being deleted.
      responses:
        '200':
          description: User deleted.

  /users:
    get:
      summary: Returns a list of users.
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: User name/email query.
        - in: query
          name: where
          schema:
            type: object
          description: Filter using key/value pairs.
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Pagination.
        - in: query
          name: max_results
          schema:
            type: integer
            minimum: 1
            maximum: 250
            default: 25
          description: The number of items to return.
        - in: query
          name: sort
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  _meta:
                    $ref: '#components/schemas/Meta'
    post:
      summary: Creates a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: New user created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'

components:
  parameters:
    IfMatch:
      in: header
      name: If-Match
      schema:
        type: string
      required: true
      description: Etag of modified resource.
  schemas:
    ObjectId:
      type: string
      example: 619277ef8bbbbfac6034aab7

    Meta:
      type: object
      properties:
        total:
          type: integer
    
    Base:
      type: object
      properties:
        _id:
          type: string
        _etag:
          type: string
        _created:
          type: string
          format: date-time
        _updated:
          type: string
          format: date-time
        _status:
          type: string
          enum:
            - OK
            - ERROR

    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        mobile:
          type: string
        role:
          type: string
        country:
          type: string
        company:
          type: string
          description: Company ID.
          $ref: '#components/schemas/ObjectId'
        user_type:
          type: string
          enum:
            - administrator
            - internal
            - public
            - account_manager
        is_validated:
          type: boolean
        is_enabled:
          type: boolean
        is_approved:
          type: boolean
        expiry_alert:
          type: boolean
        receive_email:
          type: boolean
        locale:
          type: string
        last_active:
          type: string
          format: date-time
        original_creator:
          type: string
          description: User ID.
          $ref: '#components/schemas/ObjectId'
        version_creator:
          type: string
          description: User ID.
          $ref: '#components/schemas/ObjectId'

      required:
        - email
